>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [
...     [3, 1, 3.0],
...     [6, 3, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 0.33, 1.0], [2.0, 1.0, 2.0]]
>>> wrong_matrix = [1, 2, 3]
>>> print(matrix_divided(wrong_matrix, 2))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> wrong_matrix = [[1, 2, 3], [4, 5, "6"]]
>>> print(matrix_divided(wrong_matrix, 3))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> wrong_matrix = [[1, 2, 3], "[4, 5, 6]"]
>>> print(matrix_divided(wrong_matrix, 3))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> wrong_matrix = [[1, 2, 3], [4, 5]]
>>> print(matrix_divided(wrong_matrix, 6))
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided(matrix, "100"))
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 1) is not matrix
True
>>> matrix_divided(matrix, 1) != matrix
False
